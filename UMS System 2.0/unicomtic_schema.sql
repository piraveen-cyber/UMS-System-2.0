
-- Users Table
CREATE TABLE IF NOT EXISTS Users (
    UserID INTEGER PRIMARY KEY AUTOINCREMENT,
    Username TEXT NOT NULL UNIQUE,
    Password TEXT NOT NULL,
    Role TEXT NOT NULL
);

-- Courses Table
CREATE TABLE IF NOT EXISTS Courses (
    CourseID INTEGER PRIMARY KEY AUTOINCREMENT,
    CourseName TEXT NOT NULL
);

-- Subjects Table
CREATE TABLE IF NOT EXISTS Subjects (
    SubjectID INTEGER PRIMARY KEY AUTOINCREMENT,
    SubjectName TEXT NOT NULL,
    CourseID INTEGER NOT NULL,
    FOREIGN KEY(CourseID) REFERENCES Courses(CourseID)
);

-- Students Table
CREATE TABLE IF NOT EXISTS Students (
    StudentID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    CourseID INTEGER NOT NULL,
    FOREIGN KEY(CourseID) REFERENCES Courses(CourseID)
);

-- Exams Table
CREATE TABLE IF NOT EXISTS Exams (
    ExamID INTEGER PRIMARY KEY AUTOINCREMENT,
    ExamName TEXT NOT NULL,
    SubjectID INTEGER NOT NULL,
    FOREIGN KEY(SubjectID) REFERENCES Subjects(SubjectID)
);

-- Marks Table
CREATE TABLE IF NOT EXISTS Marks (
    MarkID INTEGER PRIMARY KEY AUTOINCREMENT,
    StudentID INTEGER NOT NULL,
    ExamID INTEGER NOT NULL,
    Score INTEGER NOT NULL,
    FOREIGN KEY(StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY(ExamID) REFERENCES Exams(ExamID)
);

-- Rooms Table
CREATE TABLE IF NOT EXISTS Rooms (
    RoomID INTEGER PRIMARY KEY AUTOINCREMENT,
    RoomName TEXT NOT NULL,
    RoomType TEXT NOT NULL  -- 'Lab' or 'Hall'
);

-- Timetables Table
CREATE TABLE IF NOT EXISTS Timetables (
    TimetableID INTEGER PRIMARY KEY AUTOINCREMENT,
    SubjectID INTEGER NOT NULL,
    TimeSlot TEXT NOT NULL,
    RoomID INTEGER NOT NULL,
    FOREIGN KEY(SubjectID) REFERENCES Subjects(SubjectID),
    FOREIGN KEY(RoomID) REFERENCES Rooms(RoomID)
);
