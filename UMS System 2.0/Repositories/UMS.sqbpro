<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="UMS.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="676"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title=".Browsables" custom_title="0" dock_id="1" table="0,10:Browsables"/><dock_state state="000000ff00000000fd00000001000000020000000000000000fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000011300ffffff000000000000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1*">
-- Users Table
CREATE TABLE IF NOT EXISTS Users (
    UserID INTEGER PRIMARY KEY AUTOINCREMENT,
    Username TEXT NOT NULL UNIQUE,
    Password TEXT NOT NULL,
    Role TEXT NOT NULL
);

-- Courses Table
CREATE TABLE IF NOT EXISTS Courses (
    CourseID INTEGER PRIMARY KEY AUTOINCREMENT,
    CourseName TEXT NOT NULL
);

-- Subjects Table
CREATE TABLE IF NOT EXISTS Subjects (
    SubjectID INTEGER PRIMARY KEY AUTOINCREMENT,
    SubjectName TEXT NOT NULL,
    CourseID INTEGER NOT NULL,
    FOREIGN KEY(CourseID) REFERENCES Courses(CourseID)
);

-- Students Table
CREATE TABLE IF NOT EXISTS Students (
    StudentID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    CourseID INTEGER NOT NULL,
    FOREIGN KEY(CourseID) REFERENCES Courses(CourseID)
);

-- Exams Table
CREATE TABLE IF NOT EXISTS Exams (
    ExamID INTEGER PRIMARY KEY AUTOINCREMENT,
    ExamName TEXT NOT NULL,
    SubjectID INTEGER NOT NULL,
    FOREIGN KEY(SubjectID) REFERENCES Subjects(SubjectID)
);

-- Marks Table
CREATE TABLE IF NOT EXISTS Marks (
    MarkID INTEGER PRIMARY KEY AUTOINCREMENT,
    StudentID INTEGER NOT NULL,
    ExamID INTEGER NOT NULL,
    Score INTEGER NOT NULL,
    FOREIGN KEY(StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY(ExamID) REFERENCES Exams(ExamID)
);

-- Rooms Table
CREATE TABLE IF NOT EXISTS Rooms (
    RoomID INTEGER PRIMARY KEY AUTOINCREMENT,
    RoomName TEXT NOT NULL,
    RoomType TEXT NOT NULL  -- 'Lab' or 'Hall'
);

-- Timetables Table
CREATE TABLE IF NOT EXISTS Timetables (
    TimetableID INTEGER PRIMARY KEY AUTOINCREMENT,
    SubjectID INTEGER NOT NULL,
    TimeSlot TEXT NOT NULL,
    RoomID INTEGER NOT NULL,
    FOREIGN KEY(SubjectID) REFERENCES Subjects(SubjectID),
    FOREIGN KEY(RoomID) REFERENCES Rooms(RoomID)
);

</sql><current_tab id="0"/></tab_sql></sqlb_project>
